static int[] jobOffers(int[] scores, int[] lowerLimits, int[] upperLimits) {
        
       int result[]=new int[lowerLimits.length];
            Arrays.sort(scores);
        int n=scores.length;
        for(int i=0;i<lowerLimits.length;i++)
        {
           result[i]= countInRange(scores, n, lowerLimits[i], upperLimits[i]);
        }
        return result;

    }
 static int countInRange(int arr[], int n, int x, int y)
    {
        // initialize result
        int count = 0;
        count = upperIndex(arr, n, y) - 
                lowerIndex(arr, n, x) + 1;
        return count;
    }

     
    // function to find last index <= y
    static int upperIndex(int arr[], int n, int y)
    {
        int l = 0, h = n - 1;
        while (l <= h) 
        {
            int mid = (l + h) / 2;
            if (arr[mid] <= y)
                l = mid + 1;
            else
                h = mid - 1;
        }
        return h;
    }
static int lowerIndex(int arr[], int n, int x)
    {
        int l = 0, h = n - 1;
        while (l <= h) 
        {
            int mid = (l + h) / 2;
            if (arr[mid] >= x)
                h = mid - 1;
            else
                l = mid + 1;
        }
        return l;
    }
     
